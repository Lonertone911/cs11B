stages:
  - test
  - deploy

test:
  tags: 
    - docker
  stage: test
  script:
    # this configures Django application to use attached postgres database that is run on `postgres` host
    - export DATABASE_URL=postgres://xwdkxnwjnswaqw:3693d1d203490aa0b4a77003bc3565c8d218fda933ab9a9c109039c347147d18@ec2-54-170-100-209.eu-west-1.compute.amazonaws.com:5432/d4v54uvok6a6kk
    - apk add --no-cache curl jq python3 py3-pip
    - pip install -U pip setuptools
    - RUN apk add -U --no-cache bash python3 python3-dev libpq postgresql-dev unixodbc-dev musl-dev g++ libffi-dev
    - pip3 install --upgrade --no-cache-dir pip setuptools==49.6.0
    - pip3 install --no-cache-dir -r requirements.txt
    - ln -s /usr/bin/python3 /usr/bin/python
    - apk del --no-cache python3-dev postgresql-dev unixodbc-dev musl-dev g++ libffi-dev
    - pip install -r requirements.txt
    - python manage.py test

staging:
  tags: 
    - docker
  stage: deploy
  script:
    - apk add ruby
    - gem install dpl
    - dpl --provider=heroku --app=yescotland-staging --api-key=$HEROKU_STAGING_API_KEY
  only:
    - master

production:
  tags: 
    - docker
  stage: deploy
  script:
    - apk add ruby
    - gem install dpl
    - dpl --provider=heroku --app=yescotland --api-key=$HEROKU_PRODUCTION_API_KEY
  only:
    - tags
